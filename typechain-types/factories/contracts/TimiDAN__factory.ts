/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { TimiDAN, TimiDANInterface } from "../../contracts/TimiDAN";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "claimAirDrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ec638038062001ec6833981810160405281019062000037919062000117565b6040518060400160405280600981526020017f54696d69546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f54445400000000000000000000000000000000000000000000000000000000008152508160039081620000b49190620003c3565b508060049081620000c69190620003c3565b5050508060058190555050620004aa565b600080fd5b6000819050919050565b620000f181620000dc565b8114620000fd57600080fd5b50565b6000815190506200011181620000e6565b92915050565b60006020828403121562000130576200012f620000d7565b5b6000620001408482850162000100565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001cb57607f821691505b602082108103620001e157620001e062000183565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200024b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200020c565b6200025786836200020c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002a46200029e62000298846200026f565b62000279565b6200026f565b9050919050565b6000819050919050565b620002c08362000283565b620002d8620002cf82620002ab565b84845462000219565b825550505050565b600090565b620002ef620002e0565b620002fc818484620002b5565b505050565b5b81811015620003245762000318600082620002e5565b60018101905062000302565b5050565b601f82111562000373576200033d81620001e7565b6200034884620001fc565b8101602085101562000358578190505b620003706200036785620001fc565b83018262000301565b50505b505050565b600082821c905092915050565b6000620003986000198460080262000378565b1980831691505092915050565b6000620003b3838362000385565b9150826002028217905092915050565b620003ce8262000149565b67ffffffffffffffff811115620003ea57620003e962000154565b5b620003f68254620001b2565b6200040382828562000328565b600060209050601f8311600181146200043b576000841562000426578287015190505b620004328582620003a5565b865550620004a2565b601f1984166200044b86620001e7565b60005b8281101562000475578489015182556001820191506020850194506020810190506200044e565b8683101562000495578489015162000491601f89168262000385565b8355505b6001600288020188555050505b505050505050565b611a0c80620004ba6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b4114610226578063a457c2d714610244578063a9059cbb14610274578063dd62ed3e146102a4576100cf565b806339509351146101aa57806342b4f935146101da57806370a08231146101f6576100cf565b806304b38ce0146100d457806306fdde03146100f0578063095ea7b31461010e57806318160ddd1461013e57806323b872dd1461015c578063313ce5671461018c575b600080fd5b6100ee60048036038101906100e99190611016565b6102d4565b005b6100f8610379565b6040516101059190611104565b60405180910390f35b61012860048036038101906101239190611126565b61040b565b6040516101359190611181565b60405180910390f35b61014661042e565b60405161015391906111ab565b60405180910390f35b610176600480360381019061017191906111c6565b610438565b6040516101839190611181565b60405180910390f35b610194610467565b6040516101a19190611235565b60405180910390f35b6101c460048036038101906101bf9190611126565b610470565b6040516101d19190611181565b60405180910390f35b6101f460048036038101906101ef91906112ab565b6104a7565b005b610210600480360381019061020b919061130b565b610502565b60405161021d91906111ab565b60405180910390f35b61022e61054a565b60405161023b9190611104565b60405180910390f35b61025e60048036038101906102599190611126565b6105dc565b60405161026b9190611181565b60405180910390f35b61028e60048036038101906102899190611126565b610653565b60405161029b9190611181565b60405180910390f35b6102be60048036038101906102b99190611338565b610676565b6040516102cb91906111ab565b60405180910390f35b600082826040516020016102e9929190611387565b6040516020818303038152906040528051906020012060405160200161030f91906113d1565b60405160208183030381529060405280519060200120905061033484600554836106fd565b610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036a90611438565b60405180910390fd5b50505050565b60606003805461038890611487565b80601f01602080910402602001604051908101604052809291908181526020018280546103b490611487565b80156104015780601f106103d657610100808354040283529160200191610401565b820191906000526020600020905b8154815290600101906020018083116103e457829003601f168201915b5050505050905090565b600080610416610714565b905061042381858561071c565b600191505092915050565b6000600254905090565b600080610443610714565b90506104508582856108e5565b61045b858585610971565b60019150509392505050565b60006012905090565b60008061047b610714565b905061049c81858561048d8589610676565b61049791906114e7565b61071c565b600191505092915050565b6104f3838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505033836102d4565b6104fd3382610be7565b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461055990611487565b80601f016020809104026020016040519081016040528092919081815260200182805461058590611487565b80156105d25780601f106105a7576101008083540402835291602001916105d2565b820191906000526020600020905b8154815290600101906020018083116105b557829003601f168201915b5050505050905090565b6000806105e7610714565b905060006105f58286610676565b90508381101561063a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106319061158d565b60405180910390fd5b610647828686840361071c565b60019250505092915050565b60008061065e610714565b905061066b818585610971565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008261070a8584610d3d565b1490509392505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361078b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107829061161f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f1906116b1565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108d891906111ab565b60405180910390a3505050565b60006108f18484610676565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461096b578181101561095d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109549061171d565b60405180910390fd5b61096a848484840361071c565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d7906117af565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4690611841565b60405180910390fd5b610a5a838383610d93565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ae0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad7906118d3565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bce91906111ab565b60405180910390a3610be1848484610d98565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4d9061193f565b60405180910390fd5b610c6260008383610d93565b8060026000828254610c7491906114e7565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d2591906111ab565b60405180910390a3610d3960008383610d98565b5050565b60008082905060005b8451811015610d8857610d7382868381518110610d6657610d6561195f565b5b6020026020010151610d9d565b91508080610d809061198e565b915050610d46565b508091505092915050565b505050565b505050565b6000818310610db557610db08284610dc8565b610dc0565b610dbf8383610dc8565b5b905092915050565b600082600052816020526040600020905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e4182610df8565b810181811067ffffffffffffffff82111715610e6057610e5f610e09565b5b80604052505050565b6000610e73610ddf565b9050610e7f8282610e38565b919050565b600067ffffffffffffffff821115610e9f57610e9e610e09565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b610ec881610eb5565b8114610ed357600080fd5b50565b600081359050610ee581610ebf565b92915050565b6000610efe610ef984610e84565b610e69565b90508083825260208201905060208402830185811115610f2157610f20610eb0565b5b835b81811015610f4a5780610f368882610ed6565b845260208401935050602081019050610f23565b5050509392505050565b600082601f830112610f6957610f68610df3565b5b8135610f79848260208601610eeb565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fad82610f82565b9050919050565b610fbd81610fa2565b8114610fc857600080fd5b50565b600081359050610fda81610fb4565b92915050565b6000819050919050565b610ff381610fe0565b8114610ffe57600080fd5b50565b60008135905061101081610fea565b92915050565b60008060006060848603121561102f5761102e610de9565b5b600084013567ffffffffffffffff81111561104d5761104c610dee565b5b61105986828701610f54565b935050602061106a86828701610fcb565b925050604061107b86828701611001565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156110bf5780820151818401526020810190506110a4565b60008484015250505050565b60006110d682611085565b6110e08185611090565b93506110f08185602086016110a1565b6110f981610df8565b840191505092915050565b6000602082019050818103600083015261111e81846110cb565b905092915050565b6000806040838503121561113d5761113c610de9565b5b600061114b85828601610fcb565b925050602061115c85828601611001565b9150509250929050565b60008115159050919050565b61117b81611166565b82525050565b60006020820190506111966000830184611172565b92915050565b6111a581610fe0565b82525050565b60006020820190506111c0600083018461119c565b92915050565b6000806000606084860312156111df576111de610de9565b5b60006111ed86828701610fcb565b93505060206111fe86828701610fcb565b925050604061120f86828701611001565b9150509250925092565b600060ff82169050919050565b61122f81611219565b82525050565b600060208201905061124a6000830184611226565b92915050565b600080fd5b60008083601f84011261126b5761126a610df3565b5b8235905067ffffffffffffffff81111561128857611287611250565b5b6020830191508360208202830111156112a4576112a3610eb0565b5b9250929050565b6000806000604084860312156112c4576112c3610de9565b5b600084013567ffffffffffffffff8111156112e2576112e1610dee565b5b6112ee86828701611255565b9350935050602061130186828701611001565b9150509250925092565b60006020828403121561132157611320610de9565b5b600061132f84828501610fcb565b91505092915050565b6000806040838503121561134f5761134e610de9565b5b600061135d85828601610fcb565b925050602061136e85828601610fcb565b9150509250929050565b61138181610fa2565b82525050565b600060408201905061139c6000830185611378565b6113a9602083018461119c565b9392505050565b6000819050919050565b6113cb6113c682610eb5565b6113b0565b82525050565b60006113dd82846113ba565b60208201915081905092915050565b7f496e76616c69642070726f6f6600000000000000000000000000000000000000600082015250565b6000611422600d83611090565b915061142d826113ec565b602082019050919050565b6000602082019050818103600083015261145181611415565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061149f57607f821691505b6020821081036114b2576114b1611458565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114f282610fe0565b91506114fd83610fe0565b9250828201905080821115611515576115146114b8565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611577602583611090565b91506115828261151b565b604082019050919050565b600060208201905081810360008301526115a68161156a565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611609602483611090565b9150611614826115ad565b604082019050919050565b60006020820190508181036000830152611638816115fc565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061169b602283611090565b91506116a68261163f565b604082019050919050565b600060208201905081810360008301526116ca8161168e565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611707601d83611090565b9150611712826116d1565b602082019050919050565b60006020820190508181036000830152611736816116fa565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611799602583611090565b91506117a48261173d565b604082019050919050565b600060208201905081810360008301526117c88161178c565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061182b602383611090565b9150611836826117cf565b604082019050919050565b6000602082019050818103600083015261185a8161181e565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006118bd602683611090565b91506118c882611861565b604082019050919050565b600060208201905081810360008301526118ec816118b0565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611929601f83611090565b9150611934826118f3565b602082019050919050565b600060208201905081810360008301526119588161191c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061199982610fe0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119cb576119ca6114b8565b5b60018201905091905056fea26469706673582212201ed6aa6db1b25531b35abb589c03a1c7310c9862e48dd72f15c8c4bb10087d2464736f6c63430008110033";

type TimiDANConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimiDANConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TimiDAN__factory extends ContractFactory {
  constructor(...args: TimiDANConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _root: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TimiDAN> {
    return super.deploy(_root, overrides || {}) as Promise<TimiDAN>;
  }
  override getDeployTransaction(
    _root: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_root, overrides || {});
  }
  override attach(address: string): TimiDAN {
    return super.attach(address) as TimiDAN;
  }
  override connect(signer: Signer): TimiDAN__factory {
    return super.connect(signer) as TimiDAN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimiDANInterface {
    return new utils.Interface(_abi) as TimiDANInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TimiDAN {
    return new Contract(address, _abi, signerOrProvider) as TimiDAN;
  }
}
